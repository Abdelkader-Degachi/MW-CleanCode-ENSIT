//Q1: With this function we want to check if a1 is higher than a2 and less than a3 (No meaningful variables)
function isValueInRange(value: number, min: number, max: number): boolean {
  return min <= value && value <= max;
}

//Q2: We want to have student type with some information. (If it's not pronounceable how you will say it)
type Student = {
  firstName: string;
  lastName: string;
 Id: number;
}

//Q3: What we should call our function that return User?
getUser();


//Q4: We want to check if that our student yearly grade is acceptable for any country Education System (in Tunisia <20, in USA 100)
function isGradeBelowMax(grade: number, maxGrade: number): boolean {
  return grade < maxGrade;
}

//Q5: I know you got the idea of variable names but I want it to be clear for anyone around the world.
Student student = new Student();
Grade grade = new Grade();
Professor professor = new Professor();

//Q6: Don't you think we are overdoing it???
Type Student {
FirstName: String;
LastName: String;
Id: Number;
}

//Q7: What we can do to avoid giving unappropriat gender value? (Hint enum)
we create an enum with the genders we have 
enum Gender {
  Male = "male",
  Female = "female",
}

Type Student {
firstName: String;
lastName: String;
Id: Number;
gender: Gender;
}

function displayName(student: Student){
switch (student.gender) {
    case "Male":
        console.log("Mr." + student.firstName + " " + student.lastName);
        break;
    case "Female":
        console.log("Mrs." + student.firstName + " " + student.lastName);
        break;
    Default:
        console.log("ERROR 404");
    }
}}

//Q8: Is it good idea to display all these arguments in one line like this?
No it's not , we should create an object student that has the different attributes then just pass student as an argument
displayUserDetails(Student){
// Some logic happens here
}
//Q9: Is it good idea to give all these arguments to one function?
displayUserDetails(firstName: String, lastName: String, id: Number, department: String, university: String){
}
it depends but most likely if we have multiple arguments it's better to split the function 


//Q10: Who wants to have a function that do multiple things with multiple comments?
function isStudentPassing(student) {
  const MINIMUM_GRADE_TO_PASS = 10;
  return student.score >= MINIMUM_GRADE_TO_PASS;
}

function suspendStudent(student) {
  if (student.failedBefore) {
    console.log(
      student.gender === Gender.Male
        ? `Sorry Mr. ${student.name}, you are suspended.`
        : `Sorry Mrs. ${student.name}, you are suspended.`
    );
  } else {
    student.failedBefore = true;
  }
}

function evaluateStudents(studentsList) {
  const passedStudents = [];

  studentsList.forEach((student) => {
    if (isStudentPassing(student)) {
      passedStudents.push(student);
    } else {
      suspendStudent(student);
    }
  });

  return passedStudents;
}



