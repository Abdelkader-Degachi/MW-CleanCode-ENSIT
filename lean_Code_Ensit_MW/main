/Q1: With this function we want to check if a1 is higher than a2 and less than a3 (No meaningful variables)
function compare(a1: Number, a2: Number, a3: Number): boolean {
  return a2 <= a1 && a1 <= a3;
}


//Q2: We want to have student type with some information. (If it's not pronounceable how you will say it)
type student = {
  studentName: String;
  studentClass: String;
  studentId: number;
}


//Q3: What we should call our function that return User?
//Answer : The best practice of the getters and setters is to put the verb+the class in the camel case so it's getUser();
getUser(); 


//Q4: We want to check if that our student yearly grade is acceptable for any country Education System (in Tunisia <20, in USA 100)
isGradeBelowMax(grade)


//Q5: I know you got the idea of variable names but I want it to be clear for anyone around the world.
Student student = new Student();
Grade grade = new Grade();
Professor professor = new Professor();


//Q6: Don't you think we are overdoing it???
Type Student {
    studentFirstName: String;
    studentLastName: String;
    StudentId: Number;
}
//answer: nope ! this is the right way to do it

//Q7: What we can do to avoid giving unappropriat gender value? (Hint enum)

Enum Gender {
  Male = "Male",
  Female = "Female",
}

Type Student {
    firstName: String;
    lastName: String;
    id: Number;
    gender: Gender;
}


function displayName(student: Student){
  switch (student.gender) {
    case Gender.Male:
        console.log("Mr." + student.firstName + " " + student.lastName);
        break;
    case Gender.Female:
        console.log("Mrs." + student.firstName + " " + student.lastName);
        break;
    default:
        console.log("ERROR 404");
}
}



//Q8: Is it good idea to display all these arguments in one line like this?
displayUserDetails(student: Student, department: String, university: String){
// Some logic happens here
}
//Answer: no, we could include department and university in the student class


//Q9: Is it good idea to give all these arguments to one function?
displayUserDetails(student: Student, department: String, university: String){
}



//Q10: Who wants to have a function that do multiple things with multiple comments?
function evaluateStudents(studentsList) {
  let passedStudents = []; // This will be filled with list of passed students
  const MINIMUM_GRADE_TO_PASS = 10; // We set because to pass you need 10 at least
  // Here we will go through all the students and check our conditions and adjust students and passed list depending on that
  studentsList.forEach((student) => {
    if (student.score >= MINIMUM_GRADE_TO_PASS) {
      passedStudents.push(student); // Here we add students
    } else {
      if (student.failedBefore) {
        console.log(
          student.gender === Gender.Male
            ? `Sorry Mr. ${student.name}, you are suspended.` // This message for male students.
            : `Sorry Mrs. ${student.name}, you are suspended.` // This message for female students.
        );
      } else {
          student.failedBefore = true; // This to set failedBefore to true for the students who failed for the first time
      }
    }
  });

  return passedStudents;
}

//I didn't understand the question
