//Q1: With this function we want to check if a1 is higher than a2 and less than a3 (No meaningful variables)
function compare(a1: Number, a2: Number, a3: Number): boolean {
  return a2 <= a1 && a1 <= a3;
}

//Q2: We want to have student type with some information. (If it's not pronounceable how you will say it)
type Student = {
  firstName: String;
  lastName: String;
  StudentId: number;
}

//Q3: What we should call our function that return User?
getUserData();


//Q4: We want to check if that our student yearly grade is acceptable for any country Education System (in Tunisia <20, in USA 100)
function isGradeBelowMax(grade: number, maxGrade: number): boolean {
  return grade < maxGrade;
}


//Q5: I know you got the idea of variable names but I want it to be clear for anyone around the world.
let student = new Student();
let grade = new Grade();
let professor = new Professor();

//Q6: Don't you think we are overdoing it???
Type Student {
  studentFirstName: String;
  studentLastName: String;
  StudentId: Number;
}

//Q7: What we can do to avoid giving unappropriat gender value? (Hint enum)
enum Gender {
  Male,
  Female,
}
Type Student {
firstName: String;
lastName: String;
Id: Number;
gender: Gender;
}

function displayName(student: Student){
switch (student.gender) {
    case "Gender.Male":
        console.log("Mr." + student.firstName + " " + student.lastName);
        break;
    case "Gender.Female":
        console.log("Mrs." + student.firstName + " " + student.lastName);
        break;
    Default:
        console.log("ERROR 404");
    }
}

//Q8: Is it good idea to display all these arguments in one line like this?
displayUserDetails(firstName: String, lastName: String, id: Number, department: String, university: String){
// Some logic happens here
}
 
function displayUserDetails(
  firstName: string,
  lastName: string,
  id: number,
  department: string,
  university: string
) {
  // Some logic happens here
}
//for better readability


//Q9: Is it good idea to give all these arguments to one function?
displayUserDetails(firstName: String, lastName: String, id: Number, department: String, university: String){
}
No more than 3 arguments passed for a function.
type User = {
  firstName: String;
  lastName: String;
  UserId: number;
}
displayUserDetails(user:User, department: String, university: String){
// Some logic happens here
}

//Q10: Who wants to have a function that do multiple things with multiple comments?
function evaluateStudents(studentsList:Student[]):Student[] {
  let passedStudents:Student[] = []; 
  const MINIMUM_GRADE_TO_PASS = 10;
  studentsList.forEach((student) => {
    if (student.score >= MINIMUM_GRADE_TO_PASS) {
      passedStudents.push(student);
    } else {
      if (student.failedBefore) {
        console.log(
          student.gender === Gender.Male
            ? `Sorry Mr. ${student.name}, you are suspended.` 
            : `Sorry Mrs. ${student.name}, you are suspended.` 
        );
      } else {
          student.failedBefore = true;
      }
    }
  });

  return passedStudents;
}


