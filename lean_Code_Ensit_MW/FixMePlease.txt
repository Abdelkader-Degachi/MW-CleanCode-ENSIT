//Q1: With this function we want to check if a1 is higher than a2 and less than a3 (No meaningful variables)
function CheckNumberRange(CurrentValue: Number, LowValue: Number, HighValue: Number): boolean {
  return LowValue <= CurrentValue && CurrentValue <= HighValue;
}

//Q2: We want to have student type with some information. (If it's not pronounceable how you will say it)
type Student = {
  FirstName: String;
  LastName: String;
  StudentId: number;
}

//Q3: What we should call our function that return User?
getUserData();


//Q4: We want to check if that our student yearly grade is acceptable for any country Education System (in Tunisia <20, in USA 100)
isGradeBelowMax(grade, 20)

function isGradeBelowMax(grade: number, maxGrade: number): boolean {
  return grade <= maxGrade;
}

//Q5: I know you got the idea of variable names but I want it to be clear for anyone around the world.
Student student = new Student();
Grade grade = new Grade();
Professor professor = new Professor();

//Q6: Don't you think we are overdoing it???
Type Student {
studentFirstName: String;
studentLastName: String;
StudentId: Number;
}

//Q7: What we can do to avoid giving unappropriat gender value? (Hint enum)
Type Student {
firstName: String;
lastName: String;
Id: Number;
gender: String;
}

enum Gender {
  Male = "Male",
  Female = "Female",
}

Type Student {
firstName: String;
lastName: String;
Id: Number;
gender: Gender;
}

function displayName(student: Student){
switch (student.gender) {
    case "Male":
        console.log("Mr." + student.firstName + " " + student.lastName);
        break;
    case "Female":
        console.log("Mrs." + student.firstName + " " + student.lastName);
        break;
    Default:
        console.log("ERROR 404");
    }
}

//Q8: Is it good idea to display all these arguments in one line like this?
displayUserDetails(firstName: String, lastName: String, id: Number, department: String, university: String){
// Some logic happens here
}

function displayUserDetails(
  firstName: String,
  lastName: String,
  id: Number,
  department: String,
  university: String
) {
  // Some logic happens here
}

//Q9: Is it good idea to give all these arguments to one function?
displayUserDetails(firstName: String, lastName: String, id: Number, department: String, university: String){
}

Type Student {
firstName: String;
lastName: String;
Id: Number;
Department: String,
University: String
}

displayUserDetails(student: Student){
}

//Q10: Who wants to have a function that do multiple things with multiple comments?
function evaluateStudents(studentsList) {
  let passedStudents = []; // This will be filled with list of passed students
  const MINIMUM_GRADE_TO_PASS = 10; // We set because to pass you need 10 at least
  // Here we will go through all the students and check our conditions and adjust students and passed list depending on that
  studentsList.forEach((student) => {
    if (student.score >= MINIMUM_GRADE_TO_PASS) {
      passedStudents.push(student); // Here we add students
    } else {
      if (student.failedBefore) {
        console.log(
          student.gender === Gender.Male
            ? `Sorry Mr. ${student.name}, you are suspended.` // This message for male students.
            : `Sorry Mrs. ${student.name}, you are suspended.` // This message for female students.
        );
      } else {
          student.failedBefore = true; // This to set failedBefore to true for the students who failed for the first time
      }
    }
  });

  return passedStudents;
}

If a function is too long, it can be hard to understand.So it should be decomposed into smaller functions, each with a clear purpose, instead 
of having too comment and explain every line.