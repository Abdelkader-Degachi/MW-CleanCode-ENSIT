//Q1: With this function we want to check if a1 is higher than a2 and less than a3 (No meaningful variables)
function BetweenLimits(value: Number, lowerLimit: Number, upperLimit: Number): boolean {
  return lowerLimit <= value && value <= upperLimit;
}


//Q2: We want to have student type with some information. (If it's not pronounceable how you will say it)
type Student = {
  firstName: String;
  lastName: String;
  age: number;
}


//Q3: What we should call our function that return User?
getUserData();


//Q4: We want to check if that our student yearly grade is acceptable for any country Education System (in Tunisia <20, in USA 100)
AcceptableGrade(grade, AllowedGrade){
  return grade <= AllowedGrade
}


//Q5: I know you got the idea of variable names but I want it to be clear for anyone around the world.
Student student = new Student();
Grade grade = new Grade();
Professor professor = new Professor();


//Q6: Don't you think we are overdoing it???
Type Student {
  FirstName: String;
  LastName: String;
  Id: Number;
}

//Q7: What we can do to avoid giving unappropriat gender value? (Hint enum)
enum Gender{
  male,
  female
}

Type Student {
firstName: String;
lastName: String;
Id: Number;
gender: Gender;
}

function displayStudentGender(student: Student){
switch (student.gender) {
    case "Male":
        console.log("Mr." + student.firstName + " " + student.lastName);
        break;
    case "Female":
        console.log("Mrs." + student.firstName + " " + student.lastName);
        break;
    Default:
        console.log("ERROR 404");
    }
}

//Q8: Is it good idea to display all these arguments in one line like this?
displayUserDetails(firstName: String, 
  lastName: String,
  id: Number,
  department: String,
  university: String){
// Some logic happens here
}

//Q9: Is it good idea to give all these arguments to one function?
displayUserDetails(firstName: String, lastName: String, id: Number, department: String, university: String){
}

//Q10: Who wants to have a function that do multiple things with multiple comments?
function failedStudent(student){
  return (student.score < MINIMUM_GRADE_TO_PASS && student.failedBefore )
}

function messageFailure(student){
  return (student.gender === Gender.Male? `Sorry Mr. ${student.name}, you are suspended.`: `Sorry Mrs. ${student.name}, you are suspended.`)
}

function evaluateStudents(studentsList) {
  let passedStudents = [];
  const MINIMUM_GRADE_TO_PASS = 10;
  studentsList.forEach((student) => {
    if (student.score >= MINIMUM_GRADE_TO_PASS) {
      passedStudents.push(student);
    } else {
      if (failedStudent(student)) {
        console.log(
          messageFailure(student)
        );
      } else {
          student.failedBefore = true;
      }
    }
  });

  return passedStudents;
}


